<?xml version="1.0"?>
<project name="deploy" xmlns:sf="antlib:com.salesforce" xmlns:artifact="antlib:org.apache.maven.artifact.ant" >
	<taskdef uri="antlib:com.salesforce" resource="com/salesforce/antlib.xml" classpath="ant/lib/ant-salesforce.jar"/>

	<target name="deploy">
		<sf:deploy purgeOnDelete="true" ignoreWarnings="true" username="${sf.username}" password="${sf.password}" serverurl="${sf.server}" deployRoot="src" maxPoll="75" />
	</target>
	
	<target name="retrieve">
		<sf:retrieve username="${sf.username}" password="${sf.password}" serverurl="${sf.server}" retrieveTarget="src" unpackaged="src/package.xml" />
	</target>
		
	<target name="test" unless="${skip.tests}" >
		<sf:deploy ignoreWarnings="true" username="${sf.username}" password="${sf.password}" serverUrl="${sf.server}" checkOnly="true" testLevel="RunLocalTests" deployRoot="ant" maxPoll="360" />
	</target>
	
	<!-- Maven Ant Tasks is used to invoke the maven exec:java goal to run our UnitTestRunner application -->
	<path id="maven-ant-tasks.classpath" path="ant/lib/maven-ant-tasks-2.1.3.jar" />
	<typedef resource="org/apache/maven/artifact/ant/antlib.xml" uri="antlib:org.apache.maven.artifact.ant" classpathref="maven-ant-tasks.classpath" />
	
	<target name="unit-test-runner" unless="${skip.tests}" >
		<artifact:mvn pom="pom.xml" mavenHome="${maven.home}" failonerror="true" fork="true">
			<arg value="-Dexec.mainClass=com.patronmanager.apexUnit.UnitTestRunner" />
			<arg value="-Dexec.args=-org.login.url ${sf.pod.url} -org.username ${sf.username} -org.password ${sf.password} -org.client.id 3MVG9rFJvQRVOvk4WolH6Ofi90DaW4w9rEfRrU1.PVPZmSRoCcpB.8fkrqwQu92tExZNboC5Ol0GgQWFU_m46 -org.client.secret 56355607132816181 -regex.for.selecting.test.classes.to.execute *Test* -regex.for.selecting.source.classes.for.code.coverage.computation * -team.code.coverage.threshold 75 -org.wide.code.coverage.threshold 0" />
			<arg value="exec:java" />
			<!-- 
				Not really sure why this is needed in addition to defining mavenHome above. But if this isn't here you'll get the following error:
				-Dmaven.multiModuleProjectDirectory system property is not set. Check $M2_HOME environment variable and mvn script match.
			--> 
			<jvmarg value="-Dmaven.multiModuleProjectDirectory=${maven.home}" />
		</artifact:mvn>
	</target>
	
</project>
